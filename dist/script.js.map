{"version":3,"sources":["script.js"],"names":["console","log","form","document","getElementById","completeSection","inputCardName","inputCardNumber","inputExpDateMM","inputExpDateYY","inputCvc","onCardCardNumber","onCardCardName","onCardExpDateMM","onCardExpDateYY","onCardCvc","isRequired","value","isLengthValid","length","max","isNumber00","showError","input","message","formField","parentElement","classList","remove","add","querySelector","textContent","showSuccess","checkCardName","valid","cardName","trim","checkCardNumber","cardNumber","checkExpDateMMYY","expDateMMValid","expDateYYValid","expDateMM","expDateYY","checkCvc","cardCvc","onlyNumbers","event","newValue","target","replace","addEventListener","toUpperCase","preventDefault","isCardNameValid","isCardNumberValid","isExpDateMMYYValid","isCardCvcValid"],"mappings":"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","file":"script.js","sourcesContent":["console.log(\"HELLO\")\r\n\r\nconst form = document.getElementById(\"form\");\r\nconst completeSection = document.getElementById(\"completeSection\");\r\nconst inputCardName = document.getElementById(\"cardholderName\");\r\nconst inputCardNumber = document.getElementById(\"cardNumber\");\r\nconst inputExpDateMM = document.getElementById(\"expDateMM\");\r\nconst inputExpDateYY = document.getElementById(\"expDateYY\");\r\nconst inputCvc = document.getElementById(\"cvc\");\r\n\r\nconst onCardCardNumber = document.getElementById('onCardCardNumber');\r\nconst onCardCardName = document.getElementById('onCardCardName');\r\nconst onCardExpDateMM = document.getElementById('onCardExpDateMM');\r\nconst onCardExpDateYY = document.getElementById('onCardExpDateYY');\r\nconst onCardCvc = document.getElementById('onCardCvc');\r\n\r\n//Validating Functions\r\nconst isRequired = value => value === '' ? false : true;\r\nconst isLengthValid = (length, max) => length < max ? false : true;\r\nconst isNumber00 = value => value === '00' ? false : true;\r\n\r\n//Show Error or Succes Functions\r\nconst showError = (input, message) => {\r\n  const formField = input.parentElement;\r\n\r\n  formField.classList.remove('success');\r\n  formField.classList.add('error');\r\n\r\n  const error = formField.querySelector('small');\r\n  error.textContent = message;\r\n}\r\n\r\nconst showSuccess = (input) => {\r\n  const formField = input.parentElement;\r\n\r\n  formField.classList.remove('error');\r\n  formField.classList.add('success');\r\n\r\n  const error = formField.querySelector('small');\r\n  error.textContent = '';\r\n}\r\n\r\n\r\n//Validate inputs\r\nconst checkCardName = () => {\r\n\r\n  let valid = false;\r\n  const cardName = inputCardName.value.trim();\r\n\r\n  if (!isRequired(cardName)) {\r\n    showError(inputCardName, 'Name cannot be blank.');\r\n  } else {\r\n    showSuccess(inputCardName);\r\n    valid = true;\r\n  }\r\n\r\n  return valid;\r\n}\r\n\r\nconst checkCardNumber = () => {\r\n\r\n  let valid = false;\r\n  const max = 19;\r\n  const cardNumber = inputCardNumber.value.trim();\r\n\r\n  if (!isRequired(cardNumber)) {\r\n    showError(inputCardNumber, 'Card Number cannot be blank.');\r\n  } else if (!isLengthValid(cardNumber.length, max)) {\r\n    showError(inputCardNumber, `Card Number must be 16 digits.`);\r\n  } else {\r\n    showSuccess(inputCardNumber);\r\n    valid = true;\r\n  }\r\n\r\n  return valid;\r\n}\r\n\r\nconst checkExpDateMMYY = () => {\r\n\r\n  let valid = false;\r\n  let expDateMMValid = false;\r\n  let expDateYYValid = false;\r\n  const max = 2;\r\n  const expDateMM = inputExpDateMM.value.trim();\r\n  const expDateYY = inputExpDateYY.value.trim();\r\n\r\n  if (!isRequired(expDateMM)) {\r\n    showError(inputExpDateMM, 'The Month cannot be blank.');\r\n  } else if (!isLengthValid(expDateMM.length, max)) {\r\n    showError(inputExpDateMM, 'The Month must have 2 digits.');\r\n  } else if (!isNumber00(expDateMM)) {\r\n    showError(inputExpDateMM, 'The Month cannot be 00.');\r\n  } else {\r\n    showSuccess(inputExpDateMM);\r\n    expDateMMValid = true;\r\n  }\r\n\r\n  if (!isRequired(expDateYY)) {\r\n    showError(inputExpDateYY, 'The Year cannot be blank.');\r\n  } else if (!isLengthValid(expDateYY.length, max)) {\r\n    showError(inputExpDateYY, 'The Year must have 2 digits.');\r\n  } else if (!isNumber00(expDateYY)) {\r\n    showError(inputExpDateYY, 'The Year cannot be 00.');\r\n  } else {\r\n    showSuccess(inputExpDateYY);\r\n    expDateYYValid = true;\r\n  }\r\n\r\n  valid = expDateYYValid && expDateMMValid;\r\n  // console.log(\"EXP DATE: \" + valid);\r\n  return valid;\r\n}\r\n\r\nconst checkCvc = () => {\r\n\r\n  let valid = false;\r\n  const max = 3;\r\n  const cardCvc = inputCvc.value.trim();\r\n\r\n  if (!isRequired(cardCvc)) {\r\n    showError(inputCvc, 'Card Cvc cannot be blank.');\r\n  } else if (!isLengthValid(cardCvc.length, max)) {\r\n    showError(inputCvc, `Card Cvc must be 3 digits.`);\r\n  } else {\r\n    showSuccess(inputCvc);\r\n    valid = true;\r\n  }\r\n\r\n  return valid;\r\n}\r\n\r\n\r\n//Format the text when the users writes\r\nconst onlyNumbers = (event) => {\r\n  const value = event.target.value;\r\n  const newValue = value.replace(/[^0-9]/g, '').trim();\r\n  event.target.value = newValue;\r\n}\r\n\r\ninputCardNumber.addEventListener('input', (event) => {\r\n  const value = event.target.value;\r\n  const newValue = value.replace(/[^0-9]/g, '').replace(/(.{4})/g, '$1 ').trim();\r\n  event.target.value = newValue;\r\n});\r\n\r\ninputExpDateMM.addEventListener('input', onlyNumbers);\r\ninputExpDateYY.addEventListener('input', onlyNumbers);\r\ninputCvc.addEventListener('input', onlyNumbers);\r\n\r\n\r\n//DOM changes on the cards:\r\ninputCardName.addEventListener('input', (event) => {\r\n  onCardCardName.textContent = event.target.value.toUpperCase();\r\n})\r\n\r\ninputCardNumber.addEventListener('input', (event) => {\r\n  onCardCardNumber.textContent = event.target.value;\r\n})\r\n\r\ninputExpDateMM.addEventListener('input', (event) => {\r\n  onCardExpDateMM.textContent = event.target.value;\r\n})\r\n\r\ninputExpDateYY.addEventListener('input', (event) => {\r\n  onCardExpDateYY.textContent = event.target.value;\r\n})\r\n\r\ninputCvc.addEventListener('input', (event) => {\r\n  onCardCvc.textContent = event.target.value;\r\n})\r\n\r\n\r\n//Validate Form\r\nform.addEventListener('submit', (event) => {\r\n  event.preventDefault();\r\n\r\n  let isCardNameValid = checkCardName(),\r\n      isCardNumberValid = checkCardNumber(),\r\n      isExpDateMMYYValid = checkExpDateMMYY(),\r\n      isCardCvcValid = checkCvc();\r\n\r\n  let isFormValid = isCardNameValid &&\r\n                    isCardNumberValid &&\r\n                    isExpDateMMYYValid &&\r\n                    isCardCvcValid;\r\n\r\n  if (isFormValid) {\r\n    form.classList.add('hidden');\r\n    completeSection.classList.remove('hidden');\r\n  }\r\n})\r\n"]}